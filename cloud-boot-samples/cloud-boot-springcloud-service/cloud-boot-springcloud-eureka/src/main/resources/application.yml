spring:
  boot:
    admin:
      client:
        url: http://127.0.0.1:8788
server:
  port: 9801
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
---
spring:
  application:
    name: registry-center
  config:
    activate:
      on-profile: dev
server:
  port: 8761
eureka:
  environment: dev
  datacenter: DC1
  instance:
    # 实例的主机名
    hostname: ${spring.cloud.client.ip-address}
    # 使用 ip 代替实例名
    #prefer-ip-address: true
    # 实例的 ID 规则
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}

  client:
    # 是否向注册中心注册自己
    registerWithEureka: false
    # 是否向注册中心获取注册信息
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  #      defaultZone: http://127.0.0.1:10011/eureka/
  #      zone-1: http://127.0.0.1:10011/eureka/
  #      zone-2: http://127.0.0.1:10012/eureka/,http://127.0.0.1:10013/eureka/
  #    region: beijing
  #    availability-zones:
  #      beijing: zone-1,zone-2,zone-3
  server:
    use-read-only-response-cache: false

---
server:
  port: 9801
eureka:
  datacenter: DC1
  instance:
    hostname: peer1.com
    appname: registry-center
    instance-id: eureka-9801
    metadata-map:
      zone: DC1
  client:
    # 是否向注册中心注册自己
    registerWithEureka: true
    # 是否向注册中心获取注册信息
    fetchRegistry: true
    region: tangshan
    availability-zones:
      tangshan: DC1,DC2
    service-url:
      DC1: http://peer1.com:9801/eureka/
      DC2: http://peer2.com:9802/eureka/
    prefer-same-zone-eureka: true
spring:
  config:
    activate:
      on-profile: peer1
  application:
    name: registry-center
---
server:
  port: 9802

eureka:
  datacenter: DC2
  instance:
    hostname: peer2.com
    appname: registry-center
    instance-id: eureka-9802
    metadata-map:
      zone: DC2
  client:
    # 是否向注册中心注册自己
    registerWithEureka: true
    # 是否向注册中心获取注册信息
    fetchRegistry: true
    region: tangshan
    availability-zones:
      tangshan: DC2,DC1
    service-url:
      DC1: http://peer1.com:9801/eureka/
      DC2: http://peer2.com:9802/eureka/
    prefer-same-zone-eureka: true
spring:
  config:
    activate:
      on-profile: peer2
  application:
    name: registry-center
---
server:
  port: 9803
eureka:
  datacenter: DC3
  instance:
    hostname: peer3.com
    appname: eureka-server-cluster
  client:
    # 是否向注册中心注册自己
    registerWithEureka: true
    # 是否向注册中心获取注册信息
    fetchRegistry: true
    region: shijiazhuang
    availability-zones:
      shijiazhuang: DC3,DC1,DC2
    service-url:
      DC1: http://peer1.com:9801/eureka/
      DC2: http://peer2.com:9802/eureka/
      DC3: http://peer3.com:9803/eureka/
spring:
  config:
    activate:
      on-profile: peer3
  application:
    name: application-peer3

#eureka.server.enableSelfPreservation=false