<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cloud-boot-dependencies</artifactId>
        <groupId>com.open.cloud</groupId>
        <version>${revision}</version>
        <relativePath>../cloud-boot-dependencies</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <artifactId>cloud-boot-parent</artifactId>

    <properties>

        <main.user.dir>${basedir}/../..</main.user.dir>
        <project.encoding>UTF-8</project.encoding>
        <java.version>1.8</java.version>
        <!-- Build args -->
        <argline>-server -Xms256m -Xmx512m -Dfile.encoding=UTF-8
            -Djava.net.preferIPv4Stack=true -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=128m
        </argline>
        <arguments/>
        <jacocoArgLine/>
        <maven_pmd_plugin_version>3.13.0</maven_pmd_plugin_version>
        <maven_jar_version>3.2.0</maven_jar_version>
        <maven_surefire_version>2.22.1</maven_surefire_version>
        <maven_deploy_version>2.8.2</maven_deploy_version>
        <maven_compiler_version>3.6.0</maven_compiler_version>
        <maven_source_version>3.2.1</maven_source_version>
        <maven_javadoc_version>3.0.1</maven_javadoc_version>
        <maven_jetty_version>9.4.11.v20180605</maven_jetty_version>
        <maven_checkstyle_version>3.0.0</maven_checkstyle_version>
        <maven_jacoco_version>0.8.2</maven_jacoco_version>
        <maven_flatten_version>1.1.0</maven_flatten_version>
        <maven_enforce_version>3.0.0-M2</maven_enforce_version>
        <maven_java_formatter_plugin>0.4</maven_java_formatter_plugin>
        <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
        <maven.sTracerConfigurationListenerurefire.plugin>2.21.0</maven.sTracerConfigurationListenerurefire.plugin>
        <skip_maven_deploy>false</skip_maven_deploy>
        <spring-plugin.vrsion>2.0.0.RELEASE</spring-plugin.vrsion>

        <license_maven_plugin>3.0</license_maven_plugin>
        <sofa.version.maven.plugin>1.0.1</sofa.version.maven.plugin>
        <!--<spring-boot.version>2.3.8.RELEASE</spring-boot.version>
        <spring-cloud.version>Hoxton.SR9</spring-cloud.version>-->

        <spring-boot.version>2.5.5</spring-boot.version>
        <spring-cloud.version>2020.0.4</spring-cloud.version>

        <!--<spring-boot.version>2.4.2</spring-boot.version>
        <spring-cloud.version>2020.0.1</spring-cloud.version>-->

        <!--https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E-->
        <spring-cloud-alibaba.version>2021.1</spring-cloud-alibaba.version>
        <seata.version>1.3.0</seata.version>

        <spring-native.version>0.10.2</spring-native.version>

        <aliyun-spring-boot-dependencies>1.0.0</aliyun-spring-boot-dependencies>
        <!-- <solace-spring-boot.version>1.1.0</solace-spring-boot.version>-->
        <dubbo-spring.version>2.7.8</dubbo-spring.version>
        <dubbo-api.version>2.7.8.3</dubbo-api.version>
        <retrofit.version>[2.2.10,)</retrofit.version>

        <sofa-boot.version>3.8.0</sofa-boot.version>
        <sofa-boot-enterprise.version>3.6.0</sofa-boot-enterprise.version>
        <jboot.version>[3.9.12,)</jboot.version>
        <spring-cloud-huawei.version>1.7.0-2020.0.x</spring-cloud-huawei.version>
        <spring-boot-admin.version>2.3.1</spring-boot-admin.version>
        <spring-cloud-services.version>2.2.1.RELEASE</spring-cloud-services.version>
        <vaadin.version>20.0.7</vaadin.version>
        <wavefront.version>2.0.0-RC1</wavefront.version>
        <tio-core.version>3.7.3.v20210706-RELEASE</tio-core.version>
        <!--消息中间件-->
        <rocketmq.version>4.9.0</rocketmq.version>
        <spring-rocketmq.version>[2.2.0,)</spring-rocketmq.version>
        <spring-kafka.version>[2.4.1.RELEASE,)</spring-kafka.version>
        <!--数据库操作-->
        <github-pageHelper-starter>[1.3.0,)</github-pageHelper-starter>
        <druid.version>[1.1.9,)</druid.version>
        <mybatis.boot.version>[2.1.4,)</mybatis.boot.version>
        <mybatis.plus.version>[3.4.2,)</mybatis.plus.version>
        <mybatis.version>[3.5.7,)</mybatis.version>
        <fluent-mybatis>[1.6.8,)</fluent-mybatis>
        <shardingsphere.version>[4.1.1,)</shardingsphere.version>

        <ojdbc8>[12.2.0.1,)</ojdbc8>
        <mariadb-java-client>[2.0.2,)</mariadb-java-client>
        <!--缓存-->
        <jedis.version>3.1.0</jedis.version>
        <caffeine.version>[2.8.1,)</caffeine.version>
        <jetcache.version>[2.5.16,)</jetcache.version>
        <!--高性能框架-->
        <disruptor.version>[3.4.2,)</disruptor.version>
        <!--安全鉴权-->
        <spring-statemachine.version>2.1.3.RELEASE</spring-statemachine.version>
        <security.oauth.version>[2.5.1.RELEASE,)</security.oauth.version>
        <jjwt.version>[0.9.1,)</jjwt.version>
        <java-jwt.version>[3.16.0,)</java-jwt.version>
        <shiro-spring.version>[1.7.1,)</shiro-spring.version>
        <!--链路跟踪-->
        <zipkin.version>2.23.2</zipkin.version>
        <micrometer-registry-prometheus.version>[1.1.0,)</micrometer-registry-prometheus.version>
        <pcollections.version>[2.1.3,)</pcollections.version>
        <apollo.version>1.8.0</apollo.version>
        <perf4j.version>[0.9.16,)</perf4j.version>
        <p6spy.version>[3.9.1,)</p6spy.version>
        <nacos.version>2.0.1</nacos.version>
        <curator.version>4.3.0</curator.version>
        <javamelody.spring.boot.version>[1.80.0,)</javamelody.spring.boot.version>
        <huaweicloud-dws-jdbc.version>[1.5.301,)</huaweicloud-dws-jdbc.version>
        <!--单元测试-->
        <jmh.version>[1.19,)</jmh.version>
        <org.mockito.version>[3.2.4,)</org.mockito.version>
        <testng.version>[7.1.0,)</testng.version>
        <easymock.version>[4.1,)</easymock.version>
        <junit-jupiter.version>[5.6.0,)</junit-jupiter.version>
        <!--公共及工具类-->
        <aliyun-sdk-oss.version>[3.4.2,)</aliyun-sdk-oss.version>
        <arthas.version>3.5.3</arthas.version>
        <mapstruct.version>1.4.1.Final</mapstruct.version>
        <velocity.version>[1.7,)</velocity.version>
        <guava.version>[20.0,)</guava.version>
        <easypoi.version>4.3.0</easypoi.version>
        <kotlin.version>1.3.72</kotlin.version>
        <protobuf.java.version>3.6.0</protobuf.java.version>
        <itextpdf.version>[5.5.13,)</itextpdf.version>
        <kryo.version>[4.0.2,)</kryo.version>
        <kryo.serializers.version>[0.9,)</kryo.serializers.version>
        <avro.version>[1.8.2,)</avro.version>
        <protostuff.version>[1.6.0,)</protostuff.version>
        <fst.version>[2.48-jdk-6,)</fst.version>
        <gson.version>[2.8.5,)</gson.version>
        <hessian.version>[4.0.7,)</hessian.version>
        <jline.version>[3.13.3,)</jline.version>
        <oshi.version>[3.9.1,)</oshi.version>
        <activiti.version>[7.1.0.M5,)</activiti.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <reflections.version>[0.9.12,)</reflections.version>
        <commons-net.version>3.7.2</commons-net.version>
        <jsch.version>0.1.55</jsch.version>
        <commons-lang3.version>[3.9,)</commons-lang3.version>
        <commons-codec.version>[1.11,)</commons-codec.version>
        <commons-io.version>2.8.0</commons-io.version>
        <commons-configuration2.version>[2.6,)</commons-configuration2.version>
        <commons-text.version>[1.8,)</commons-text.version>
        <commons-collections4.version>[4.4,)</commons-collections4.version>
        <commons-compress.version>[1.19,)</commons-compress.version>
        <fastjson.version>[1.2.62,)</fastjson.version>
        <easyexcel.version>[2.1.6,)</easyexcel.version>
        <jasypt.version>[3.0.2,)</jasypt.version>
        <hutool-all.version>[5.1.2,)</hutool-all.version>
        <xk-time.version>[3.1.0,)</xk-time.version>
        <esapi.version>[2.2.1.1,)</esapi.version>
        <joda-time.version>[2.10.5,)</joda-time.version>
        <okhttp.version>[4.3.1,)</okhttp.version>
        <guice.version>[4.2.2,)</guice.version>
        <kaptcha.version>[2.3.2,)</kaptcha.version>
        <springfox-swagger2.version>[3.0.0,)</springfox-swagger2.version>
        <knife4j.version>[2.0.0,)</knife4j.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!--微服务原生组件-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alipay.sofa</groupId>
                <artifactId>sofaboot-dependencies</artifactId>
                <version>${sofa-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alipay.sofa</groupId>
                <artifactId>sofaboot-enterprise-dependencies</artifactId>
                <version>${sofa-boot-enterprise.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <version>${vaadin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>aliyun-spring-boot-dependencies</artifactId>
                <version>${aliyun-spring-boot-dependencies}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.experimental</groupId>
                <artifactId>spring-native</artifactId>
                <version>${spring-native.version}</version>
            </dependency>

            <dependency>
                <groupId>com.huaweicloud</groupId>
                <artifactId>spring-cloud-huawei-dependencies</artifactId>
                <version>${spring-cloud-huawei.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <!--携程配置中心-->
            <dependency>
                <groupId>com.ctrip.framework.apollo</groupId>
                <artifactId>apollo</artifactId>
                <version>${apollo.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--MQ中间件-->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-all</artifactId>
                <version>${rocketmq.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${spring-rocketmq.version}</version>
            </dependency>
            <!--监控、链路跟踪-->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi</artifactId>
                <version>${easypoi.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-spring-boot-starter</artifactId>
                <version>${easypoi.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.plugin</groupId>
                <artifactId>spring-plugin-core</artifactId>
                <version>${spring-plugin.vrsion}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.plugin</groupId>
                <artifactId>spring-plugin-metadata</artifactId>
                <version>${spring-plugin.vrsion}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.plugin</groupId>
                        <artifactId>spring-plugin-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.taobao.arthas</groupId>
                <artifactId>arthas-spring-boot-starter</artifactId>
                <version>${arthas.version}</version>
                <type>jar</type>
            </dependency>

            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo-spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-api-docs-annotations</artifactId>
                <version>${dubbo-api.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-api-docs-core</artifactId>
                <version>${dubbo-api.version}</version>
            </dependency>

            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-all</artifactId>
                <version>${seata.version}</version>
            </dependency>

            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata.version}</version>
            </dependency>

            <!-- <dependency>
                 <groupId>com.solace.spring.boot</groupId>
                 <artifactId>solace-spring-boot-bom</artifactId>
                 <version>${solace-spring-boot.version}</version>
                 <type>pom</type>
                 <scope>import</scope>
             </dependency>-->

            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-spring-boot-starter</artifactId>
                <version>${activiti.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework.cloud</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc8</artifactId>
                <version>${ojdbc8}</version>
            </dependency>

            <dependency>
                <groupId>io.jboot</groupId>
                <artifactId>jboot</artifactId>
                <version>${jboot.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.lianjiatech</groupId>
                <artifactId>retrofit-spring-boot-starter</artifactId>
                <version>${retrofit.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-client</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>

            <!--稳定版本，替代spring security bom内置-->
            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${security.oauth.version}</version>
            </dependency>

            <dependency>
                <groupId>io.zipkin.zipkin2</groupId>
                <artifactId>zipkin</artifactId>
                <version>${zipkin.version}</version>
            </dependency>

            <dependency>
                <groupId>net.bull.javamelody</groupId>
                <artifactId>javamelody-spring-boot-starter</artifactId>
                <version>${javamelody.spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer-registry-prometheus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.ibodrov.pcollections</groupId>
                <artifactId>pcollections</artifactId>
                <version>${pcollections.version}</version>
            </dependency>
            <!--三方jar包-->
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib-jdk8</artifactId>
                <version>${kotlin.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-stdlib</artifactId>
                <version>${kotlin.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-test</artifactId>
                <version>${kotlin.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro-spring.version}</version>
            </dependency>
            <!--JWT token应用 -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>

            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>

            <dependency>
                <groupId>de.javakaffee</groupId>
                <artifactId>kryo-serializers</artifactId>
                <version>${kryo.serializers.version}</version>
            </dependency>

            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-runtime</artifactId>
                <version>${protostuff.version}</version>
            </dependency>

            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-core</artifactId>
                <version>${protostuff.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>

            <dependency>
                <groupId>com.caucho</groupId>
                <artifactId>hessian</artifactId>
                <version>${hessian.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>

            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>${itextpdf.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-jdbc-spring-namespace</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-generator</artifactId>
                <version>${mybatis.plus.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${github-pageHelper-starter}</version>
            </dependency>

            <!-- 引入fluent-mybatis 运行依赖包, scope为compile -->
            <dependency>
                <groupId>com.github.atool</groupId>
                <artifactId>fluent-mybatis</artifactId>
                <version>${fluent-mybatis}</version>
            </dependency>
            <!-- 引入fluent-mybatis-processor, scope设置为provider 编译需要，运行时不需要 -->
            <dependency>
                <groupId>com.github.atool</groupId>
                <artifactId>fluent-mybatis-processor</artifactId>
                <version>${fluent-mybatis}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.xkzhangsan</groupId>
                <artifactId>xk-time</artifactId>
                <version>${xk-time.version}</version>
            </dependency>

            <dependency>
                <groupId>org.owasp.esapi</groupId>
                <artifactId>esapi</artifactId>
                <version>${esapi.version}</version>
            </dependency>

            <dependency>
                <artifactId>velocity</artifactId>
                <groupId>org.apache.velocity</groupId>
                <version>${velocity.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-starter-redis</artifactId>
                <version>${jetcache.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-starter-redis-springdata</artifactId>
                <version>${jetcache.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-anno</artifactId>
                <version>${jetcache.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alicp.jetcache</groupId>
                <artifactId>jetcache-redis</artifactId>
                <version>${jetcache.version}</version>
            </dependency>

            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>${disruptor.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>

            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp</artifactId>
                <version>${okhttp.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>

            <dependency>
                <groupId>p6spy</groupId>
                <artifactId>p6spy</artifactId>
                <version>${p6spy.version}</version>
            </dependency>

            <dependency>
                <groupId>org.perf4j</groupId>
                <artifactId>perf4j</artifactId>
                <version>${perf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.jline</groupId>
                <artifactId>jline</artifactId>
                <version>${jline.version}</version>
            </dependency>
            <dependency>
                <groupId>org.t-io</groupId>
                <artifactId>tio-core</artifactId>
                <version>${tio-core.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <!--硬件信息获取-->
            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
            </dependency>

            <dependency>
                <groupId>com.jcraft</groupId>
                <artifactId>jsch</artifactId>
                <version>${jsch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <!-- BASE64处理 -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>${commons-configuration2.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>

            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
            </dependency>

            <!--阿里json工具类 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!--接口包-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox-swagger2.version}</version>
            </dependency>
            <!--不涉及到UI前端-->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-micro-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!--前端的ui资源-->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!--单元测试-->
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-core</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjdk.jmh</groupId>
                <artifactId>jmh-generator-annprocess</artifactId>
                <version>${jmh.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${org.mockito.version}</version>
            </dependency>

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${easymock.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!--<dependency>
            <groupId>com.taobao.arthas</groupId>
            <artifactId>arthas-spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-configuration2</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>

        <dependency>
            <groupId>org.owasp.esapi</groupId>
            <artifactId>esapi</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>-->

        <!-- <dependency>
             <groupId>ch.qos.logback</groupId>
             <artifactId>logback-classic</artifactId>
         </dependency>

         <dependency>
             <groupId>ch.qos.logback</groupId>
             <artifactId>logback-core</artifactId>
         </dependency>-->

        <!-- <dependency>
             <groupId>com.google.guava</groupId>
             <artifactId>guava</artifactId>
         </dependency>

         <dependency>
             <groupId>javax.servlet</groupId>
             <artifactId>javax.servlet-api</artifactId>
         </dependency>

         <dependency>
             <groupId>org.projectlombok</groupId>
             <artifactId>lombok</artifactId>
             <scope>provided</scope>
         </dependency>

         <dependency>
             <groupId>org.testng</groupId>
             <artifactId>testng</artifactId>
             <scope>test</scope>
         </dependency>
         <dependency>
             <groupId>org.mockito</groupId>
             <artifactId>mockito-core</artifactId>
             <scope>test</scope>
         </dependency>
         <dependency>
             <groupId>org.openjdk.jmh</groupId>
             <artifactId>jmh-core</artifactId>
             <scope>test</scope>
         </dependency>

         <dependency>
             <groupId>org.openjdk.jmh</groupId>
             <artifactId>jmh-generator-annprocess</artifactId>
             <scope>test</scope>
         </dependency>

         <dependency>
             <groupId>junit</groupId>
             <artifactId>junit</artifactId>
             <scope>test</scope>
         </dependency>

         <dependency>
             <groupId>org.jetbrains.kotlin</groupId>
             <artifactId>kotlin-reflect</artifactId>
             <version>${kotlin.version}</version>
         </dependency>

         <dependency>
             <groupId>org.jetbrains.kotlin</groupId>
             <artifactId>kotlin-stdlib-jdk8</artifactId>
         </dependency>

         <dependency>
             <groupId>org.jetbrains.kotlin</groupId>
             <artifactId>kotlin-stdlib</artifactId>
         </dependency>

         <dependency>
             <groupId>org.jetbrains.kotlin</groupId>
             <artifactId>kotlin-test</artifactId>
             <scope>test</scope>
         </dependency>-->
    </dependencies>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.5</version>
            </plugin>
        </plugins>
    </reporting>

    <build>
        <!-- Used for packaging NOTICE & LICENSE to each sub-module jar-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>${maven.multiModuleProjectDirectory}</directory>
                <targetPath>META-INF/</targetPath>
                <filtering>false</filtering>
                <includes>
                    <include>NOTICE</include>
                    <include>LICENSE</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!-- git commit info -->
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>4.0.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <skipPoms>false</skipPoms>
                    <dateFormat>yyyy-MM-dd'T'HH:mm:ssZ</dateFormat>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
                    </generateGitPropertiesFilename>
                    <excludeProperties>
                        <excludeProperty>git.branch</excludeProperty>
                        <excludeProperty>git.build.host</excludeProperty>
                        <excludeProperty>git.build.time</excludeProperty>
                        <excludeProperty>git.build.user.email</excludeProperty>
                        <excludeProperty>git.build.user.name</excludeProperty>
                        <excludeProperty>git.remote.origin.url</excludeProperty>
                        <excludeProperty>git.total.commit.count</excludeProperty>
                        <excludeProperty>git.commit.time</excludeProperty>
                        <excludeProperty>git.local.branch.ahead</excludeProperty>
                        <excludeProperty>git.local.branch.behind</excludeProperty>
                        <excludeProperty>git.tags</excludeProperty>
                    </excludeProperties>
                    <injectAllReactorProjects>true</injectAllReactorProjects>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven_jar_version}</version>
                <configuration>
                    <archive>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <index>true</index>
                        <manifest>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <Specification-Version>${project.version}</Specification-Version>
                            <Implementation-Version>${project.version}</Implementation-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <!--我们会经常碰到这样的问题，在pom中引入了一个jar，里面默认依赖了其他的jar包。jar包一多的时候，我们很难确认哪些jar是我们需要的，哪些jar是冲突的。此时会出现很多莫名其妙的问题，什么类找不到啦，方法找不到啦，这种可能的原因就是jar的版本不是我们所设想的版本，但是我们也不知道低版本的jar是从哪个maven里面引用的。此时我们的maven-enforcer-plugin就可以登场了。-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven_enforce_version}</version>
                <executions>
                    <execution>
                        <id>enforce-no-releases</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireSnapshotVersion>
                                    <message>No Releases Allowed!</message>
                                    <failWhenParentIsRelease>false</failWhenParentIsRelease>
                                </requireSnapshotVersion>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license_maven_plugin}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>remove</goal>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <quiet>true</quiet>
                    <header>${main.user.dir}/tools/HEADER</header>
                    <includes>
                        <include>**/src/main/java/**</include>
                        <include>**/src/test/java/**</include>
                    </includes>
                    <strictCheck>true</strictCheck>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                    </mapping>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
                <artifactId>maven-java-formatter-plugin</artifactId>
                <version>${maven_java_formatter_plugin}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configFile>${main.user.dir}/tools/Formatter.xml</configFile>
                    <encoding>${project.encoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven_pmd_plugin_version}</version>
                <configuration>
                    <sourceEncoding>${project.encoding}</sourceEncoding>
                    <targetJdk>${java.version}</targetJdk>
                    <printFailingErrors>true</printFailingErrors>
                    <linkXRef>false</linkXRef>
                    <includeTests>true</includeTests>
                    <rulesets>
                        <ruleset>${main.user.dir}/tools/pmd-ruleset.xml</ruleset>
                    </rulesets>
                </configuration>
                <executions>
                    <execution>
                        <id>check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>com.alibaba.p3c</groupId>
                        <artifactId>p3c-pmd</artifactId>
                        <version>2.1.1</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven_deploy_version}</version>
                <configuration>
                    <skip>${skip_maven_deploy}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                    <useReleaseProfile>false</useReleaseProfile>
                    <releaseProfiles>release</releaseProfiles>
                    <goals>deploy</goals>
                    <arguments>${arguments}</arguments>
                </configuration>
            </plugin>
            <!--使用flatten-maven-plugin对发布的POM进行精简-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>${maven_flatten_version}</version>
                <configuration>
                    <updatePomFile>true</updatePomFile>
                    <!--<flattenMode>resolveCiFriendliesOnly</flattenMode>-->
                    <flattenMode>bom</flattenMode>
                </configuration>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven_compiler_version}</version>
                <configuration>
                    <!--<compilerArgs>
                        <compilerArg>-proc:none</compilerArg>
                        <compilerArg>-parameters</compilerArg>
                    </compilerArgs>-->
                    <fork>true</fork>
                    <encoding>${project.encoding}</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!--source-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven_source_version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--javadoc-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.4</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                            <goal>aggregate</goal>
                        </goals>
                        <configuration>
                            <additionalparam>-Xdoclint:none</additionalparam>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <includeDependencySources>true</includeDependencySources>
                    <!-- <dependencySourceIncludes>
                         <dependencySourceInclude>org.apache.dubbo:dubbo-*</dependencySourceInclude>
                         <dependencySourceExclude>com.alibaba:hessian-*</dependencySourceExclude>
                     </dependencySourceIncludes>-->
                    <show>public</show>
                    <charset>UTF-8</charset>
                    <encoding>UTF-8</encoding>
                    <docencoding>UTF-8</docencoding>
                    <sourcepath>src/main/java/</sourcepath>
                    <!-- <doclint>none</doclint>-->
                    <links>
                        <link>http://docs.oracle.com/javase/8/docs/api</link>
                    </links>
                    <doctitle>Cloud Boot ${project.version} API</doctitle>
                    <windowtitle>Cloud Boot ${project.version} API</windowtitle>
                </configuration>
            </plugin>
            <!--签名-->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven_jacoco_version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report-aggregate</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- common shared -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <forkMode>once</forkMode>
                    <argLine>${argline}</argLine>
                    <systemProperties>
                        <!-- common shared -->
                    </systemProperties>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>