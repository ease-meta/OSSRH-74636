<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.open.cloud</groupId>
    <artifactId>cloud-boot-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Cloud Boot parent</name>
    <description>Cloud Boot parent</description>

    <properties>
        <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
        <main.user.dir>${basedir}</main.user.dir>
        <license.maven.plugin>3.0</license.maven.plugin>
        <maven.java.formatter.plugin>0.4</maven.java.formatter.plugin>
        <project.encoding>UTF-8</project.encoding>
        <java.version>1.8</java.version>
        <maven.compiler.plugin>3.1</maven.compiler.plugin>
    </properties>

    <modules>
        <module>cloud-boot-project</module>
        <module>cloud-boot-samples</module>
        <module>cloud-boot-project/cloud-boot-dataway</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>easyexcel</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openjdk.jmh</groupId>
            <artifactId>jmh-generator-annprocess</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <artifactId>cloud-boot-dependencies</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.open.cloud</groupId>
                <artifactId>cloud-boot-actuator</artifactId>
                <version>1.0.0-SNAPSHOT</version>
            </dependency>

            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-api</artifactId>
            </dependency>

            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-autoconfigure</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-base</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-cache</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-core</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-datalake</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-dataway</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-dubbo</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-flyway</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-jboot</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-generator</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-server</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-sofa</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-springcloud</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-starters</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-web</artifactId>
            </dependency>
            <dependency>
                <groupId>com.open.cloud</groupId>
                <version>1.0.0-SNAPSHOT</version>
                <artifactId>cloud-boot-tools</artifactId>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven.deploy.plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

           <!-- <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license.maven.plugin}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>remove</goal>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <quiet>true</quiet>
                    <header>${main.user.dir}/tools/HEADER</header>
                    <includes>
                        <include>**/src/main/java/**</include>
                        <include>**/src/test/java/**</include>
                    </includes>
                    <strictCheck>true</strictCheck>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                    </mapping>
                </configuration>
            </plugin>-->

            <plugin>
                <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
                <artifactId>maven-java-formatter-plugin</artifactId>
                <version>${maven.java.formatter.plugin}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configFile>${main.user.dir}/tools/Formatter.xml</configFile>
                    <encoding>${project.encoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin}</version>
                <configuration>
                    <encoding>${project.encoding}</encoding>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacocoArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report-aggregate</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
